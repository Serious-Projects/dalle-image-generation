import { FormEvent, useEffect, useState } from 'react';
import { Card, FormField, Loader } from '../components';

export type Post = {
	id: string;
	name: string;
	prompt: string;
	photo: string;
};

type RenderCardsProps = {
	data: Post[] | null;
	title: string;
};

function RenderCards({ data, title }: RenderCardsProps) {
	if (data && data?.length > 0) {
		return (
			<>
				{data.map((post: Post) => (
					<Card key={post.id} {...post} />
				))}
			</>
		);
	}
	return <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>;
}

function Home() {
	const [loading, setLoading] = useState(false);
	const [allPosts, setAllPosts] = useState<Post[] | null>(null);
	const [searchText, setSearchText] = useState('');
	const [searchedResults, setSearchedResults] = useState<any>(null);
	const [searchedTimeout, setSearchedTimeout] = useState<any>(null);

	useEffect(() => {
		const fetchPosts = async () => {
			setLoading(true);
			try {
				const response = await fetch('http://localhost:8080/api/v1/post', {
					method: 'GET',
					headers: { 'Content-Type': 'application/json' },
				});
				if (response.ok) {
					const result = await response.json();
					setAllPosts(result.data.reverse());
				}
			} catch (err) {
				alert(err);
			} finally {
				setLoading(false);
			}
		};
		fetchPosts();
	}, []);

	const handleSearchChange = (e: FormEvent<HTMLInputElement>) => {
		clearTimeout(searchedTimeout);
		setSearchText(e.currentTarget.value);
		setSearchedTimeout(
			setTimeout(() => {
				const searchResults = allPosts?.filter(
					(item: Post) =>
						item.name.toLowerCase().includes(searchText.toLowerCase()) ||
						item.prompt.toLowerCase().includes(searchText.toLowerCase())
				);
				setSearchedResults(searchResults);
			}, 700)
		);
	};

	return (
		<section className="mx-auto max-w-7xl">
			<div>
				<h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
				<p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
					Browse through the collection of imaginative and visually stunning images generated by DALL-E AI
				</p>
			</div>

			<div className="mt-16">
				<FormField
					labelName="Search Posts"
					type="text"
					name="text"
					placeholder="Search posts"
					value={searchText}
					handleChange={handleSearchChange}
				/>
			</div>

			<div className="mt-10">
				{loading ? (
					<div className="flex items-center justify-center">
						<Loader />
					</div>
				) : (
					<>
						{searchText && (
							<h2 className="font-medium text-[#666e75] text-xl mb-3">
								Showing results for <span className="text-[#222328]">{searchText}</span>
							</h2>
						)}

						<div className="grid grid-cols-1 gap-3 lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2">
							{searchText ? (
								<RenderCards data={searchedResults} title="No Search Results Found" />
							) : (
								<RenderCards data={allPosts} title="No posts found" />
							)}
						</div>
					</>
				)}
			</div>
		</section>
	);
}

export default Home;
